# Welcome to Part 3: Introduction to R Studio, the third act of Lab Meeting 3. 
# If you haven't done any coding before, well, you're in for a ride! R is a language designed by statisticians so that researchers can run complex statistical analyses
# on their personal computers. It is open source, although there is a paid version. This is a very useful skill in the life and biomedical sciences, and someone who
# can process data and perform even the simplest graphical summaries using R can get a job as a Data Analyst. At this point, you've taken Biology 151/L, 152/L, 
# and perhaps Ecology; if that is the case, then you've done some data and some summary statistics in Google Sheets, Excel, or R. I would like you to level up in your
# quantitative and analytical skill set, so I designed all of the analyses here in Genetics Lab to be done mostly in R. To get started, use the code below to analyze
# phenotypic data. 


rm(list=ls(all=TRUE)) # This line of code removes traces of codes that were ran on the previous or ongoing session. 

setwd("G:/RCodes/CH2") #Set your directory folder. This is just an example, you need to figure out the path to your directory folder, which is unique to your computer. 
#note that R uses forward slashes instead of backslashes. 

#Import data set
library(readr)
rawdata <-read_csv("G:/RCodes/CH2/plasticgarden2.csv")
View(rawdata)

# Examine the data. How many types are there? How many populations are there? 

# install.packages(car, Hmisc, RColorBrewer, piecewiseSEM, MASS, splines, ggplot2, plyr, mi, rcompanion, agricolae, viridis, mgcv)

# call up the following installed packages-----------------
library(car)
library(Hmisc)
library(RColorBrewer)
library(piecewiseSEM)
library(MASS)
library(splines)
library(ggplot2)
library(plyr)
library(mi)
library(rcompanion)
library(agricolae)
library(viridis)
library(mgcv)

# Use these lines of code to name the data fields (column headers) as variables
population <- rawdata$population
type <- rawdata$type
fruitcount <- rawdata$fruitcount
stemcount <- rawdata$stemcount

# This line of code will tell R to treat type as a categorical variable.  
rawdata$type <- factor(rawdata$type, levels=c("Native", "Invasive", "Landrace"))

# The three (3) ANOVA (and ANCOVA) tests are below. These three lines of code will run and summarize two two-way analysis of variance tests and an analysis of
# covariance test of phenotypic means among types, among populations. The ANCOVA also includes stemcount as a covariant, 
# and the interaction between type versus stemcount
summary(lm.stem <- aov(stemcount ~ type + population, data = rawdata))
summary(lm.fruit <- aov(fruitcount ~ type + population, data = rawdata))
summary(lm.trait.corr <- aov(fruitcount ~ type + population + stemcount + type*stemcount, data = rawdata))

pal <- viridisLite::viridis(3)
pal

# This line of code uses the popular package, ggplot2 to generate box plots of mean stem count among plant types
p <- ggplot(rawdata, aes(x=type, y=stemcount, fill=type)) + ylab("Stem count") + xlab("Plant type") +
  guides(color=guide_legend(title="Type", alpha=0.75, title.position = "top", title.hjust = 0.5)) 
p <- p + geom_boxplot(color="gray45", size=0.5, width=0.5, outlier.size = 2, alpha=1) + 
  stat_summary(fun=mean, colour="gray38", geom="point", shape=18, size=5,show.legend = FALSE) 
p <- p +  scale_fill_manual(values=pal)
p <- p + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                            panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size=0.5))
p <- p + theme(axis.title.x = element_blank(),
               axis.text.x  = element_text(vjust=0.5, size=18, colour = "gray38"))
p <- p+ theme(axis.title.y = element_text(size=18, colour = "gray38"),
              axis.text.y  = element_text(size=16, colour = "gray38"))
p <- p + theme(legend.position="none")
print(p) 

# This line of code uses the popular package, ggplot2 to generate plots of mean fruit count among plant types
p <- ggplot(rawdata, aes(x=type, y=fruitcount, fill=type)) + ylab("Stem count") + xlab("Plant type") +
  guides(color=guide_legend(title="Type", alpha=0.75, title.position = "top", title.hjust = 0.5)) 
p <- p + geom_boxplot(color="gray45", size=0.5, width=0.5, outlier.size = 2, alpha=1) + 
  stat_summary(fun=mean, colour="gray38", geom="point", shape=18, size=5,show.legend = FALSE) 
p <- p +  scale_fill_manual(values=pal)
p <- p + theme_bw() + theme(panel.border = element_blank(), panel.grid.major = element_blank(),
                            panel.grid.minor = element_blank(), axis.line = element_line(colour = "black", size=0.5))
p <- p + theme(axis.title.x = element_blank(),
               axis.text.x  = element_text(vjust=0.5, size=18, colour = "gray38"))
p <- p+ theme(axis.title.y = element_text(size=18, colour = "gray38"),
              axis.text.y  = element_text(size=16, colour = "gray38"))
p <- p + theme(legend.position="none")
print(p) 

#calculate mean stem count in each type
aggregate(rawdata$stemcount, list(rawdata$type), FUN=mean)

#calculate mean fruit count in each type
aggregate(rawdata$fruitcount, list(rawdata$type), FUN=mean)

